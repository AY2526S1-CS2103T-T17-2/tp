@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":DeleteCommandParser" as DeleteCommandParser LOGIC_COLOR
participant "d:DeleteCommand" as DeleteCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("delete n/Alice")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("delete n/Alice")
activate AddressBookParser

create DeleteCommandParser
AddressBookParser -> DeleteCommandParser
activate DeleteCommandParser

DeleteCommandParser --> AddressBookParser
deactivate DeleteCommandParser

AddressBookParser -> DeleteCommandParser : parse("n/Alice")
activate DeleteCommandParser

note left: DeleteCommandParser creates\nNameContainsKeywordsPredicate

create DeleteCommand
DeleteCommandParser -> DeleteCommand : new(predicate)
activate DeleteCommand

DeleteCommand --> DeleteCommandParser :
deactivate DeleteCommand

DeleteCommandParser --> AddressBookParser : d
deactivate DeleteCommandParser

DeleteCommandParser -[hidden]-> AddressBookParser
destroy DeleteCommandParser

AddressBookParser --> LogicManager : d
deactivate AddressBookParser

LogicManager -> DeleteCommand : execute(m)
activate DeleteCommand

DeleteCommand -> Model : getFilteredPersonList()
activate Model
Model --> DeleteCommand : listToFilter
deactivate Model

loop for each person in listToFilter matching predicate
    DeleteCommand -> Model : deletePerson(person)
    activate Model
    Model --> DeleteCommand
    deactivate Model
end

create CommandResult
DeleteCommand -> CommandResult : new("Deleted X persons...")
activate CommandResult

CommandResult --> DeleteCommand
deactivate CommandResult

DeleteCommand --> LogicManager : r
deactivate DeleteCommand

[<--LogicManager
deactivate LogicManager
@enduml
